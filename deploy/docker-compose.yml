# Минимальная версия инфраструктуры на базе
# OpenSearch - хранилище логов и метрик
# OpenSearch Dashboards - отрисовка логов
# Fluent Bit - служба сбора логов
# Envoy - прокси
# Keycloak - сервер идентификации
# Minio - S3 хранилище файлов
# smtp4dev - SMTP сервер для тестирования отправки email уведомлений
# postgres - база данных для хранения сущностей бэкенда
# kafka/zookeeper - брокер сообщений для связи между основным приложением и сервисом по отправке email уведомлений

# Адреса:
# Приложение доступно по http://localhost:8090 (envoy прокси)
# Панели мониторинга http://localhost:5601 (opensearch dashboards, kibana)
# Управление пользователями http://localhost:8081 (keycloak)
# nexus-docker.greatstep.ru - свой репозиторий docker образов для сохранения и фиксации версий образов.

#version: '3'
services:

  app:
    image: nexus-docker.greatstep.ru/nginx:1.27.0
    depends_on:
      - fluent-bit
      - envoy
    volumes:
      - ./volumes/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/nginx/nginx.conf:/etc/nginx/nginx.conf
    logging:
      # используемый драйвер логгирования
      driver: "fluentd"
      options:
        # куда посылать лог-сообщения, необходимо чтобы адрес
        # совпадал с настройками плагина forward
        fluentd-address: localhost:24224
        # теги используются для маршрутизации лог-сообщений, тема
        # маршрутизации будет рассмотрена ниже
        tag: app.logs

  fluent-bit:
    container_name: fluent-bit
    image: nexus-docker.greatstep.ru/fluent-bit:release
    ports:
      # необходимо открыть порты, которые используются плагином forward
      - "24224:24224"
      - "24224:24224/udp"
      - "2020:2020"
    environment:
      - opensearch_host=opensearch
      - opensearch_user=admin
      - opensearch_pass=adm-Password0
    volumes:
      - ./volumes/fluent-bit-etc/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./volumes/fluent-bit-etc/parsers.conf:/fluent-bit/etc/parsers.conf

  opensearch:
    container_name: opensearch
    image: nexus-docker.greatstep.ru/opensearch:release
    environment:
      - discovery.type=single-node
      - http.port=9200
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=adm-Password0
    ports:
      - '9200:9200'
      - '9600:9600'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  dashboards:
    image: nexus-docker.greatstep.ru/opensearch-dashboards:release
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
    depends_on:
      - opensearch

  envoy:
    image: nexus-docker.greatstep.ru/envoy:v1.29.0  # Use the official Envoy proxy image
    volumes:
      - ./volumes/envoy/envoy.yaml:/etc/envoy/envoy.yaml  # Mount your Envoy configuration file
      - ./envoy/certs:/etc/envoy/certs  # Mount your TLS certificates
    ports:
      - "8080:8080"
    depends_on:
      keycloak:
        condition: service_healthy

  keycloak:
    image: nexus-docker.greatstep.ru/keycloack:24.0.4
    ports:
      - "8081:8080"
    volumes:
      #      - ./keycloak:/tmp
      - ./volumes/keycloak/import:/opt/keycloak/data/import
      - ./keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
      - ./keycloak/certs/keycloak.jks:/etc/x509/https/keystore  # Mount your Keycloak keystore
    environment:
      KEYCLOAK_USER: otus
      KEYCLOAK_PASSWORD: otus
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: "/tmp/realm-export.json"
      KC_HEALTH_ENABLED: "true"
      KC_HOSTNAME_URL: "http://localhost:8080/"
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 10s
      timeout: 5s
      retries: 15
    command:
      - start-dev
      - --hostname-port=8081
      - --import-realm
      - --proxy-headers=forwarded
      - --hostname-strict=false

  smtp4dev:
    container_name: smtp4dev
    image: nexus-docker.greatstep.ru/smtp4dev:linux-amd64-prerelease
    restart: always
    ports:
      # WebInterface
      - '5000:80'
      # SMTP
      - '25:25'
      # IMAP
      - '143:143'
    environment:
      - ServerOptions__Urls=http://mail.local:80
      - ServerOptions__HostName=smtp4dev
      - RelayOptions__Login=test
      - RelayOptions__Password=test

  minio:
    container_name: minio
    image: nexus-docker.greatstep.ru/minio:release
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data

  postgres:
    container_name: postgres
    image: nexus-docker.greatstep.ru/postgres:16.3
    environment:
      POSTGRES_DB: "my_singer"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"

  zookeeper:
    container_name: zookeeper
    image: nexus-docker.greatstep.ru/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    container_name: kafka
    image: nexus-docker.greatstep.ru/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  opensearch-data:
  minio_storage: { }
